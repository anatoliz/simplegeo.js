var simplegeo=(function(b,d){var c=(function(k,g){function e(){return(new Date).getTime()}var m=k.document;var n=e(),i=/=\?(&|$)/,j=/(\?|&)_=.*?(&|$)/,l=/\?/,h=/%20/g,f=Object.prototype.toString,o={isFunction:function(p){return f.call(p)==="[object Function]"},isArray:function(p){return f.call(p)==="[object Array]"},each:function(s,w,r){var q,t=0,u=s.length,p=u===g||o.isFunction(s);if(r){if(p){for(q in s){if(w.apply(s[q],r)===false){break}}}else{for(;t<u;){if(w.apply(s[t++],r)===false){break}}}}else{if(p){for(q in s){if(w.call(s[q],q,s[q])===false){break}}}else{for(var v=s[0];t<u&&w.call(v,t,v)!==false;v=s[++t]){}}}return s},param:function(p){var q=[];if(o.isArray(p)||p.jquery){o.each(p,function(){u(this.name,this.value)})}else{for(var t in p){r(t,p[t])}}return q.join("&").replace(h,"+");function r(s,v){if(o.isArray(v)){o.each(v,function(x,w){if(/\[\]$/.test(s)){u(s,w)}else{r(s+"["+(typeof w==="object"||o.isArray(w)?x:"")+"]",w)}})}else{if(v!=null&&typeof v==="object"){o.each(v,function(x,w){r(s+"["+x+"]",w)})}else{u(s,v)}}}function u(s,v){v=o.isFunction(v)?v():v;q[q.length]=encodeURIComponent(s)+"="+encodeURIComponent(v)}},ajax:function(A){var y,t,r,q=A;if(A.data&&typeof A.data!=="string"){A.data=o.param(A.data)}y=A.jsonpCallback||("jsonp"+n++);if(A.data){A.data=(A.data+"").replace(i,"="+y+"$1")}A.url=A.url.replace(i,"="+y+"$1");k[y]=k[y]||function(s){t=s;z();p();k[y]=g;try{delete k[y]}catch(B){}if(x){x.removeChild(w)}};var v=e();var u=A.url.replace(j,"$1_="+v+"$2");A.url=u+((u===A.url)?(l.test(A.url)?"&":"?")+"_="+v:"");A.url+=(l.test(A.url)?"&":"?")+A.data;var x=m.getElementsByTagName("head")[0]||m.documentElement;var w=m.createElement("script");w.src=A.url;x.insertBefore(w,x.firstChild);return g;function z(){if(A.success){A.success.call(q,t,r)}}function p(){if(A.complete){A.complete.call(q,g,r)}}}};return o})(b);var a=(function(i){var e="0.1";var h="api.simplegeo.com";var g="80";var j="http://"+h+":"+g+"/"+e;var f={record:"/records/layer/id.json",records:"/records/layer/ids.json",history:"/records/layer/id/history.json",nearby:"/records/layer/nearby/arg.json",nearbyAddress:"/nearby/address/lat,lon.json",densityDay:"/density/day/lat,lon.json",densityHour:"/density/day/hour/lat,lon.json",contains:"/contains/lat,lon.json",overlaps:"/overlaps/south,west,north,east.json",boundary:"/boundary/id.json",locate:"/locate/ip.json",locateSelf:"/locate.json"};var k=function(l){this.token=l};k.prototype={request:function(m,l,n){l.token=this.token;l=i.param(l)+"&callback=?";i.ajax({url:j+m,dataType:"json",data:l,success:function(o){if(o.error){var p=new Error(o.message);p.code=o.code;n(p)}else{n(null,o.data)}},error:function(q,o,p){n(p)}})},getRecord:function(l,n,m){path=f.record;path=path.replace("layer",l).replace("id",n);return this.request(path,{},m)},getRecords:function(l,m,n){path=f.records;idString=m.join(",");path=path.replace("layer",l).replace("ids",idString);return this.request(path,{},n)},getHistory:function(l,o,m,n){if(n===d){n=m;m={}}path=f.history;path=path.replace("layer",l).replace("id",o);return this.request(path,m,n)},getNearby:function(l,n,o,m,p){if(p===d){p=m;m={}}path=f.nearby;path=path.replace("layer",l).replace("arg",n+","+o);return this.request(path,m,p)},getNearbyGeohash:function(l,n,m,o){if(o===d){o=m;m={}}path=f.nearby;path=path.replace("layer",l).replace("arg",n);return this.request(path,m,o)},getNearbyAddress:function(l,m,n){path=f.nearbyAddress;path=path.replace("lat",l).replace("lon",m);return this.request(path,{},n)},getDensity:function(n,o,m,l,p){if(p===d){p=l;l=d;path=f.densityDay;path=path.replace("day",m).replace("lat",n).replace("lon",o)}else{path=f.densityHour;path=path.replace("day",m).replace("hour",l).replace("lat",n).replace("lon",o)}return this.request(path,{},p)},getContains:function(l,m,n){path=f.contains;path=path.replace("lat",l).replace("lon",m);return this.request(path,{},n)},getOverlaps:function(n,l,p,m,o,q){if(q===d){q=o;o={}}path=f.overlaps;path=path.replace("south",n).replace("west",l).replace("north",p).replace("east",m);return this.request(path,o,q)},getBoundary:function(m,l){path=f.boundary;path=path.replace("id",m);return this.request(path,{},l)},getLocation:function(l,n){var m;if(n===d){n=l;m=f.locateSelf}else{m=f.locate.replace("ip",l)}return this.request(m,{},n)}};return{Client:k}})(c);return a})(window);